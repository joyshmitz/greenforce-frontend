{
  "openapi": "3.0.1",
  "info": {
    "title": "EDI B2C Web API",
    "version": "1.0"
  },
  "paths": {
    "/ArchivedMessageGetDocument": {
      "post": {
        "tags": [
          "ArchivedMessageGetDocument"
        ],
        "operationId": "ArchivedMessageGetDocument",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ArchivedMessageSearch": {
      "post": {
        "tags": [
          "ArchivedMessageSearch"
        ],
        "operationId": "ArchivedMessageSearch",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchArchivedMessagesCriteria"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchArchivedMessagesCriteria"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchArchivedMessagesCriteria"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArchivedMessageResult"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArchivedMessageResult"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArchivedMessageResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/RequestAggregatedMeasureData": {
      "post": {
        "tags": [
          "RequestAggregatedMeasureData"
        ],
        "operationId": "RequestAggregatedMeasureData",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAggregatedMeasureDataMarketRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAggregatedMeasureDataMarketRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAggregatedMeasureDataMarketRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/RequestWholesaleSettlement": {
      "post": {
        "tags": [
          "RequestWholesaleSettlement"
        ],
        "operationId": "RequestWholesaleSettlement",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWholesaleSettlementMarketRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWholesaleSettlementMarketRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWholesaleSettlementMarketRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ArchivedMessageResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "messageId": {
            "type": "string",
            "nullable": true
          },
          "documentType": {
            "type": "string"
          },
          "senderNumber": {
            "type": "string"
          },
          "receiverNumber": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "businessReason": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CalculationType": {
        "type": "string",
        "enum": [
          "PreliminaryAggregation",
          "BalanceFixing",
          "WholesaleFixing",
          "FirstCorrection",
          "SecondCorrection",
          "ThirdCorrection"
        ]
      },
      "MessageCreationPeriod": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MeteringPointType": {
        "type": "string",
        "enum": [
          "Production",
          "FlexConsumption",
          "TotalConsumption",
          "NonProfiledConsumption",
          "Exchange"
        ]
      },
      "RequestAggregatedMeasureDataMarketRequest": {
        "type": "object",
        "description": "Responsible for carrying the market message data from the incoming message before any data validation.",
        "additionalProperties": false,
        "properties": {
          "calculationType": {
            "$ref": "#/components/schemas/CalculationType"
          },
          "meteringPointType": {
            "$ref": "#/components/schemas/MeteringPointType"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "gridArea": {
            "type": "string",
            "nullable": true
          },
          "energySupplierId": {
            "type": "string",
            "nullable": true
          },
          "balanceResponsibleId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RequestWholesaleSettlementChargeType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RequestWholesaleSettlementMarketRequest": {
        "type": "object",
        "description": "Responsible for carrying the market message data from the incoming message before any data validation.",
        "additionalProperties": false,
        "properties": {
          "calculationType": {
            "$ref": "#/components/schemas/CalculationType"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "gridArea": {
            "type": "string",
            "nullable": true
          },
          "energySupplierId": {
            "type": "string",
            "nullable": true
          },
          "resolution": {
            "type": "string",
            "nullable": true
          },
          "chargeOwner": {
            "type": "string",
            "nullable": true
          },
          "chargeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestWholesaleSettlementChargeType"
            }
          }
        }
      },
      "SearchArchivedMessagesCriteria": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "createdDuringPeriod": {
            "$ref": "#/components/schemas/MessageCreationPeriod"
          },
          "messageId": {
            "type": "string",
            "nullable": true
          },
          "senderNumber": {
            "type": "string",
            "nullable": true
          },
          "receiverNumber": {
            "type": "string",
            "nullable": true
          },
          "documentTypes": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "businessReasons": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "includeRelatedMessages": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "scheme": "Bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [
        "Bearer"
      ]
    }
  ]
}